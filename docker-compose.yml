services:
  mysql_member: &mysql_template
    container_name: mysql-member
    restart: always
    image: mysql:8.0.40
    volumes:
      - mysql_member:/var/lib/mysql
    environment:
      TZ: Asia/Seoul
      LANG: C.UTF-8
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: member
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - "3306"
    networks:
      - moeum

  mysql_music:
    <<: *mysql_template
    container_name: mysql-music
    volumes:
      - mysql_music:/var/lib/mysql
    command: --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
    environment:
      TZ: Asia/Seoul
      LANG: C.UTF-8
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: music

  mysql_rec:
    <<: *mysql_template
    container_name: mysql-rec
    volumes:
      - mysql_rec:/var/lib/mysql
    environment:
      TZ: Asia/Seoul
      LANG: C.UTF-8
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: rec

  elastic:
    container_name: elastic-music
    image: elasticsearch:8.15.3
    volumes:
      - elastic_music:/usr/share/elasticsearch/data
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    deploy:
      resources:
        limits:
          memory: 2G
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null || exit 1
      interval: 10s
      timeout: 30s
      retries: 5
    expose:
      - 9200
    networks:
      - moeum

  redis_gateway: &redis_template
    container_name: redis-gateway
    restart: always
    image: redis:7.4.1-alpine
    expose:
      - "6379"
    command: [ "redis-server" ]
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    networks:
      - moeum

  redis_member:
    <<: *redis_template
    container_name: redis-member

  redis_music:
    <<: *redis_template
    container_name: redis-music

  redis_rec:
    <<: *redis_template
    container_name: redis-rec

  rabbitmq:
    container_name: moeum-rabbitmq
    restart: always
    image: rabbitmq:4.0.3-management-alpine
    expose:
      - "5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - moeum

  gateway: &spring_template
    container_name: moeum-gateway
    restart: always
    build: ./backend/gateway
    depends_on:
      redis_gateway:
        condition: service_healthy
    expose:
      - 8080
    networks:
      - moeum

  member:
    <<: *spring_template
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql_member:
        condition: service_healthy
      redis_member:
        condition: service_healthy
    container_name: moeum-member
    build: ./backend/member
    expose:
      - 8081

  music:
    <<: *spring_template
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql_music:
        condition: service_healthy
      redis_music:
        condition: service_healthy
    container_name: moeum-music
    build: ./backend/music
    expose:
      - 8082

  rec:
    <<: *spring_template
    depends_on:
      rabbitmq:
        condition: service_healthy
      elastic:
        condition: service_healthy
      mysql_rec:
        condition: service_healthy
      redis_rec:
        condition: service_healthy
    container_name: moeum-recommendation
    build: ./backend/recommendation
    expose:
      - 8083

  client:
    container_name: moeum-client
    restart: always
    build: ./frontend
    ports:
      - "80:80"
      - "443:443"
    networks:
      - moeum

volumes:
  mysql_member:
  mysql_music:
  mysql_rec:
  mongo_music:
  elastic_music:


networks:
  moeum:
    driver: bridge
